[{"C:\\JS-Projects\\match-up-memory-game\\src\\index.js":"1","C:\\JS-Projects\\match-up-memory-game\\src\\App.js":"2","C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Rules.js":"3","C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Game.js":"4","C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Board.js":"5","C:\\JS-Projects\\match-up-memory-game\\src\\Components\\StatusBar.js":"6","C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Card.js":"7"},{"size":535,"mtime":1611860930282,"results":"8","hashOfConfig":"9"},{"size":2619,"mtime":1611811552234,"results":"10","hashOfConfig":"9"},{"size":1818,"mtime":1611775351529,"results":"11","hashOfConfig":"9"},{"size":1020,"mtime":1611775397763,"results":"12","hashOfConfig":"9"},{"size":5644,"mtime":1611861359587,"results":"13","hashOfConfig":"9"},{"size":592,"mtime":1611858469009,"results":"14","hashOfConfig":"9"},{"size":417,"mtime":1611855002781,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"p04uuo",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\JS-Projects\\match-up-memory-game\\src\\index.js",[],["32","33"],"C:\\JS-Projects\\match-up-memory-game\\src\\App.js",["34"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport './App.css';\n\nimport Rules from \"./Components/Rules\";\nimport Game from \"./Components/Game\";\n\nimport card0 from \"./images/card0.png\";\nimport card1 from \"./images/card1.png\";\nimport card2 from \"./images/card2.png\";\nimport card3 from \"./images/card3.png\";\nimport card4 from \"./images/card4.png\";\nimport card5 from \"./images/card5.png\";\nimport card6 from \"./images/card6.png\";\nimport card7 from \"./images/card7.png\";\nimport card8 from \"./images/card8.png\";\nimport card9 from \"./images/card9.png\";\nimport card10 from \"./images/card10.png\";\n\n\nfunction App() {\n  const cardImages = [card0, card1, card2, card3, card4, card5, card6, card7, card8, card9, card10];\n\n  const [deckSize, setDeckSize] = React.useState({ current: 6 });\n  const [deck, setDeck] = React.useState(() => {\n    return shuffle(Array(deckSize.current).fill(null).map((elem, index) => {\n      const card = {\n        id: index + 1,\n        type: Math.ceil((index + 1) / 2),\n        image: cardImages[Math.ceil((index + 1) / 2)],\n        facedownImage: card0,\n        state: \"facedown\"\n      };\n      return card;\n    }));\n  });\n\n\n  function buildDeck() {\n    const realDeck = Array(deckSize.current).fill(null).map((elem, index) => {\n      const card = {\n        id: index + 1,\n        type: Math.ceil((index + 1) / 2),\n        image: cardImages[Math.ceil((index + 1) / 2)],\n        facedownImage: cardImages[0],\n        state: \"facedown\"\n      };\n      return card;\n    });\n    setDeck(shuffle(realDeck));\n  }\n\n  function shuffle(arr) {\n    function replaceCard(array, from, to) {\n      const card = array.splice(from, 1);\n      array.splice(to, 0, card[0]);\n      return array;\n    };\n\n    const length = arr.length;\n    let tempArr = arr;\n    for (let i = 0; i < length * 2; i++) {\n      const random1 = Math.floor(Math.random() * length);\n      const random2 = Math.floor(Math.random() * length);\n      tempArr = replaceCard(tempArr, random1, random2);\n    }\n    return tempArr;\n  };\n\n  React.useEffect(() => {\n    buildDeck();\n  }, [deckSize]);\n\n  return (\n    <Router>\n      <div className=\"main-div\">\n        <Switch>\n          <Redirect from=\"/\" to=\"/rules\" exact strict />\n          <Route path=\"/rules\" exact strict render={() => <Rules startNewGame={size => setDeckSize({ current: Number(size) })}/>} />\n          <Route path=\"/game\" exact strict render={() => <Game deck={deck} startNewGame={size => setDeckSize({ current: Number(size) })}/>} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Rules.js",[],"C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Game.js",[],"C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Board.js",["35","36"],"C:\\JS-Projects\\match-up-memory-game\\src\\Components\\StatusBar.js",[],"C:\\JS-Projects\\match-up-memory-game\\src\\Components\\Card.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":77,"column":6,"nodeType":"43","endLine":77,"endColumn":16,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":119,"column":8,"nodeType":"43","endLine":119,"endColumn":14,"suggestions":"46"},{"ruleId":"41","severity":1,"message":"47","line":139,"column":8,"nodeType":"43","endLine":139,"endColumn":17,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'buildDeck'. Either include it or remove the dependency array.","ArrayExpression",["51"],"React Hook React.useEffect has a missing dependency: 'initRecordData'. Either include it or remove the dependency array.",["52"],"React Hook React.useEffect has missing dependencies: 'currentTries', 'initRecordData', and 'liveDeck.length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBestGame' needs the current value of 'currentTries'.",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [buildDeck, deckSize]",{"range":"60","text":"61"},"Update the dependencies array to be: [deck, initRecordData]",{"range":"62","text":"63"},"Update the dependencies array to be: [currentTries, initRecordData, liveDeck.length, victory]",{"range":"64","text":"65"},[2124,2134],"[buildDeck, deckSize]",[4336,4342],"[deck, initRecordData]",[5375,5384],"[currentTries, initRecordData, liveDeck.length, victory]"]